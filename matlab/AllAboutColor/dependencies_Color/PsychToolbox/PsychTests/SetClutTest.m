function SetClutTest% SetClutTest times SetClut for all your screens at all% pixelSizes, at various priorities, with a brief stint, on each% iteration, at another priority, using Sync, Async, and Immed% versions of the PBControl call, to discover what factors, if any,% affect whether SetClut waits for blanking.% % "8 bits" specifies the pixelSize.% "256 entries" says how many of the clut's entries we are loading,%     either 1 or all.% "Sync","Async", and "Immed" are flavors of the PBControl call for%     cscSetEntries or cscDirectSetEntries.% "priority 7/0" specifies two processor priorities:%     "7" is the priority at which we call SetClut,%     "0" is another priority that we use momentarily in the loop.% "3.7 ms/0.1 ms" are durations of the calls to SetClut and Priority.% "loop 16.6 ms, 60 Hz" gives the period and frequency of the loop.%     If SetClut waits for blanking then the loop frequency will%     equal the frame rate.% % Written to help unravel mysterious behavior of the Rage 128 driver % discovered by Bob Dougherty on his blue G3.% % Denis Pelli% 9/9/99  dgp Wrote it.% 9/10/99 dgp Turn off SetClutCallsWaitBlanking during test.% 9/21/99 dgp Test Sync, Async, and Immed versions of the PBControl call.%             Load all variables and funs before timing loop.%             Cleaned up comments and printout.% 9/22/99 dgp Test at all pixelSizes.% 9/25/99 dgp Test loading one/all clut entries.% 9/30/99 dgp Renamed from "SetClutPriorityTest.m" to SetClutTest.m% 10/2/99 dgp Explain the printout.% 11/1/99	dgp Report the new Preferences added to work around the bug in the Rage128 video driver.help SetClutTestDescribeComputer;saiString={'Sync','Async','Immed'};for s=SCREEN('Screens');	oldPixelSize=SCREEN(s,'PixelSize');	oldSetClutBlanking=SCREEN(s,'Preference','SetClutCallsWaitBlanking',0);	DescribeScreen(s);	% Report preferences that work around the Rage128 driver bug.	if SCREEN(s,'Preference','DipPriorityAfterSetClut')		fprintf('NOTE: DipPriorityAfterSetClut is true, which is normally used only to work around a bug in the Rage128 driver.\n');	end	if SCREEN(s,'Preference','MinimumSetClutPriority')		fprintf('NOTE: MinimumSetClutPriority is %d, which is normally used only to work around a bug in the Rage128 driver.\n',SCREEN(s,'Preference','MinimumSetClutPriority'));	end	if oldSetClutBlanking		fprintf('Disabling SetClutCallsWaitBlanking while testing driver.\n');	end	for pixelSize=SCREEN(s,'PixelSizes')		SCREEN(s,'PixelSize',pixelSize);		SCREEN(s,'Preference','SetClutCallsWaitBlanking',0);		cmap=ClutDefault(s);		for p=[0 7]			for otherPriority=unique([0 p])				for sai=0					SCREEN(s,'Preference','SetClutSAI',sai);					for entries=[1 size(cmap,1)]						clear cmap2						cmap2=cmap(1:entries,:);						GetSecs;WaitSecs(0);Priority(0);i=0;t0=0;t1=0;t2=0; % load funs and vars						tSetClut=0;tDeferred=0;						Priority(p);						t=GetSecs;						if 0							for i=1:100								t0=GetSecs;								SCREEN(s,'SetClut',cmap2);								t1=GetSecs;								Priority(otherPriority);								Priority(p);								t2=GetSecs;								tSetClut=tSetClut+t1-t0;								tDeferred=tDeferred+t2-t1;								WaitSecs(0.003); % this helps, but i don't know why.							end						else							loop={							'for i=1:100;'								't0=GetSecs;'								'SCREEN(s,''SetClut'',cmap2);'								't1=GetSecs;'								'Priority(otherPriority);'								'Priority(p);'								't2=GetSecs;'								'tSetClut=tSetClut+t1-t0;'								'tDeferred=tDeferred+t2-t1;'								'WaitSecs(0.003);'							'end;'							};							Rush(loop,p);						end						t=(GetSecs-t)/100;						Priority(0);						tSetClut=tSetClut/100;						tDeferred=tDeferred/100;						fprintf('%2d bits, %3d entries, %5s, priority %d/%d, %4.1f/%.1f ms, loop %4.1f ms, %.0f Hz\n',pixelSize,entries,saiString{sai+1},p,otherPriority,tSetClut*1000,tDeferred*1000,1000*t,1/t);					end				end			end		end		SCREEN(s,'Preference','SetClutSAI',0);	end	SCREEN(s,'PixelSize',oldPixelSize);	SCREEN(s,'Preference','SetClutCallsWaitBlanking',oldSetClutBlanking);endDescribeScreen(-1);