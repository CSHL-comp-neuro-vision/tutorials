function MexTest% MexTest%% A quick test of all the MEX functions in PsychToolbox.%% (We omit the obsolete CMETER.mex from this test because it's% incompatible with some computers, eg PowerBook G3 Series.)% % NOTE: if MexTest detects a conflict and the error message generated by% the incompatible MEX file is too vague to identify it, then you should% use the MATLAB debugger to single step though MexTest.m to figure out% which line the error occurs on, which will resolve the mystery since we% only call one MEX per line.% % To use the MATLAB debugger: % 1. Type "edit mextest", followed by <return>. % 2. In the newly open MexTest.m window, click on the green bug symbol at% the top of the window. (Due to a cosmetic bug in MATLAB 5.2, you might% get a beep and an error message printed in the command window. Don't% worry; ignore them.)% 3. In the newly open debugger window, also called MexTest.m, click on a% horizontal dash next to one of the line numbers (e.g. 62) at the left % edge of the window; the dash should become a pretty red ball. This is a% breakpoint.% 4. Hit command-zero to get back to the command window, and type% "mextest", followed by <return>; MexTest will run a bit, until it% reaches your breakpoint. Then the command window will display "K>>"% indicating that your breakpoint has been reached.% 5. Hit command-4 to get back to the debugger window. Now you can use the% single step button (second from left at the top of the window, it looks% like a triangle with a bar blunting its point). Single step until you% reach the error.%% Denis Pelli% 3/29/97	dgp	Wrote it.% 				Allow 1000 warnings, set severity to "warn",%				and reset count to zero.% 4/15/97	dgp Explicit screen number.% 4/26/97   dhb Add explicit screen number to all OpenWindow, OpenOffscreenWindow,%				and OpenScreen calls.  Each of these generates a fatal error%				otherwise.% 5/31/97	dgp Add "success" message at end.% 2/12/98	dgp Added new version of PutColorImage.%				Commented out some obsolete usages that are no longer allowed:%				OpenWindow,SetClut9,SetClutQ,BlitImage.% 2/28/98	dgp Invoke all mex functions in PsychToolbox.% 3/5/98	dgp Add rest of allowed obsolete usages from SCREEN.c.% 4/7/98	dgp Comment out TIMER and DLOG tests since we're dropping them from the distribution.% 4/7/98	dgp Explain how to use the MATLAB debugger.% 8/12/98	dgp Print PsychTableVersion.% 4/1/99	dgp Comment out CMETER, which is incompatible with PowerBook G3 Series, %				probably due to internal modem.%				Reduce size of rect in calls to SCREEN GetImage for compatibility with%				Student MATLAB.% 3/12/00	dgp Added SERIAL, QT.% 7/11/00	dgp Print list of mex files.% 8/4/00	dgp	Added IccProfile.fprintf('PsychToolbox %g, %s, MATLAB %s\n',PsychToolboxVersion,PsychToolboxDate,version);fprintf('Calling every MEX function in PsychToolbox, to check for compatibility.\n');fprintf('If MexTest discovers an incompatible MEX file, be sure to read \nwhat "help MexTest" has to say.\n');clear mex;clear mex;	% do it twice, in case there was something else called "mex".[mFiles,mexFiles]=inmem;if length(mexFiles)~=0	error('Can''t clear mex files from memory.');end% PsychBasicfprintf('PsychTable version %d created by %s.mex\n',SCREEN('Preference','PsychTableVersion'),SCREEN('Preference','PsychTableCreator'));Bytes;eval('Debugger(0);','if isempty(strmatch(''Usage:'',lasterr));error(lasterr);lasterr;end');DoNothing;EventAvail('keyDown');FileShare;FlushEvents('keyDown');eval('GetChar(0);','if isempty(strmatch(''Usage:'',lasterr));error(lasterr);end');eval('GetClicks(0,0);','if isempty(strmatch(''Usage:'',lasterr));error(lasterr);end');[x,y]=GetMouse;GetSecs;GetTicks;HideCursor;KbCheck;eval('KbWait(0);','if isempty(strmatch(''Usage:'',lasterr));error(lasterr);end');MaxPriority('GetSecs');PatchTrap('EventAvail',0);Priority;QT('GetCodecNameList');Rush(';',0);SCREEN('Screens');ScreenSaver;SERIAL('Ports');SetMouse(x,y);   ShowCursor;Shuffle(0);SND('Quiet');SysBeep(0);WaitSecs(0);  WaitTicks(0);% PsychCalIccProfile('Folder');% PsychClipboardCopyImage(0);PasteImage;CopyText('');PasteText;CopyCImage([0 0 0]);PasteCImage;% PsychFilesfiletype;% PsychObsoletebitImage=ZeroBitImage([1,1],1);InsertBitImage255(0,bitImage,1);eval('BlitBitImage(0);','if isempty(strmatch(''Invalid'',lasterr));error(lasterr);end');eval('ShowImage;','if isempty(strmatch(''ShowImage'',lasterr));error(lasterr);end');eval('ShowCImage;','if isempty(strmatch(''ShowCImage'',lasterr));error(lasterr);end');eval('ShowVec;','if isempty(strmatch(''Usage'',lasterr));error(lasterr);end');eval('ShowCVec;','if isempty(strmatch(''Usage'',lasterr));error(lasterr);end');% CMETER('CTS',0); % initialization fails on PowerBook G3 Series.[mFiles,mexFiles]=inmem;fprintf('Success! %d mex functions have been loaded into memory:\n',length(mexFiles));disp(sort(mexFiles))% fprintf('Now testing obsolete usages for SCREEN that are still allowed, producing \nappropriate warnings.\n');% SCREEN('UsageWarnings',1000,1,0);% [windowPtr,windowRect] = SCREEN(0,'OpenWindow',[],[],[]);% [windowPtr,windowRect] = SCREEN(0,'OpenOffscreenWindow',[],[],[]);% SCREEN(windowPtr,'Close');% SCREEN('CloseAll');% [windowPtr,windowRect]=SCREEN('GetMATLABWindow',[]);% n-th in MATLAB's Window menu.% [windowPtr,windowRect]=SCREEN('GetFrontWindow');% [windowPtr,windowRect]=SCREEN('GetWindowByTitle',[]);% [windowPtr,windowRect] = SCREEN(0,'OpenWindow',[],[],[]);% [windowPtr,windowRect] = SCREEN(0,'OpenOffscreenWindow',[],[],[]);% rect = SCREEN(windowPtr,'Rect');% pixelSize = SCREEN(windowPtr,'PixelSize');% screenNumber = SCREEN(windowPtr,'WindowScreenNumber');% [windowPtr,windowRect]=SCREEN('GetFrontWindow');% title = SCREEN(windowPtr,'WindowTitle');% kind = SCREEN(windowPtr,'WindowKind');	% -1=our offscreen;0=bad;1=our onscreen;2=MATLAB% SCREEN(windowPtr,'WindowToFront')		% bring window to front% SCREEN(windowPtr,'WindowToBack')		% send window to back% SCREEN('MATLABToFront',[])				% bring MATLAB window to front% SCREEN(windowPtr,'MoveWindow',[],[])% screenRect = SCREEN(0,'Rect');% [pixelSize,isColor] = SCREEN(windowPtr,'PixelSize',[],[]);% [windowPtr,windowRect] = SCREEN(0,'OpenWindow',[],[],[]);% framesSinceLastWait=SCREEN(windowPtr,'WaitVBL',[]); % obsolete% framesSinceLastWait=SCREEN(windowPtr,'WaitBlanking',[]);% frameCount = SCREEN(windowPtr,'PeekBlanking');% frameCount = SCREEN(windowPtr,'PeekVBL'); % obsolete% SCREEN(windowPtr,'ClutMovie',[255:-1:0;255:-1:0;255:-1:0]');% err = SCREEN(windowPtr,'SetClut',[0:255;0:255;0:255]',[],[]);% srcWindowPtr=SCREEN(0,'OpenOffscreenWindow',0);% dstWindowPtr=SCREEN(0,'OpenWindow');% SCREEN('CopyWindow',srcWindowPtr,dstWindowPtr,[],[],[]);% SCREEN(windowPtr,'PutImage',magic(64),[],[])% [windowPtr,windowRect] = SCREEN(0,'OpenWindow',[],[0 0 100 100],[]);% imageMatrix = SCREEN(windowPtr,'GetImage',[0 0 64 64]); % small enough for Student MATLAB% if SCREEN(windowPtr,'PixelSize')<16 & any(SCREEN(windowPtr,'PixelSizes')>8)% 	% if possible, reopen the window in 16 or 32 bit mode% 	pix=SCREEN(windowPtr,'PixelSizes');% 	SCREEN(windowPtr,'Close');% 	windowPtr=SCREEN(0,'OpenWindow',[],[],pix(end));% end% if SCREEN(windowPtr,'PixelSize')>8% 	SCREEN(windowPtr,'PutColorImage',magic(32),magic(32),magic(32),[],[])% 	SCREEN(windowPtr,'PutColorImage',ones(32,32,3),[],[])% 	[redMatrix,greenMatrix,blueMatrix] = SCREEN(windowPtr,'GetColorImage',[0 0 32 32]);% end% SCREEN(windowPtr,'FillRect',[],[])	% use it to clear the screen% SCREEN(windowPtr,'FillOval',[],[])% color=255;% SCREEN(windowPtr,'DrawLine',0,0,0,1000,1000,[],[],[])% SCREEN(windowPtr,'FillPoly',255,rect)% SCREEN(windowPtr,'FrameRect',255,rect,[],[],[])% SCREEN(windowPtr,'FrameOval',255,rect,[],[],[])% SCREEN(windowPtr,'FrameArc',color,rect,0,90,[],[],[])% [x,y]=SCREEN(windowPtr,'DrawText','Hello world',0,50,color);% width=SCREEN(windowPtr,'TextWidth','Hello');% [fontNumber,fontName]=SCREEN(windowPtr,'TextFont');% [fontNumber,fontName]=SCREEN(windowPtr,'TextFont',0);% [fontNumber,fontName]=SCREEN(windowPtr,'TextFont','Bookman');% fontSize=SCREEN(windowPtr,'TextSize',24);% style=SCREEN(windowPtr,'TextStyle',0);% copyMode=SCREEN(windowPtr,'TextMode',0);% SCREEN(windowPtr,'SetDrawingRegion',rect,[])% SCREEN('CloseAll');% windowPtr=SCREEN(0,'OpenWindow',0,[0 0 100 100]);% % Obsolete: still work, but produce warnings. % SCREEN(windowPtr,'BlitImage255',magic(2));	% use 'PutImage'% SCREEN(windowPtr,'BringWindowToFront');		% use 'WindowToFront'% SCREEN('BringMATLABToFront');				% use 'MATLABToFront'% SCREEN(windowPtr,'ClearScreen');			% use 'FillRect'% SCREEN(windowPtr,'CloseScreen');			% use 'Close'% windowPtr=SCREEN(0,'OpenWindow',0,[0 0 100 100]); % re-open the window.% SCREEN(windowPtr,'ClutMovieQ',[255:-1:0;255:-1:0;255:-1:0]'); % use 'ClutMovie'% SCREEN('CopyWindows',windowPtr,windowPtr);	% use 'CopyWindow'% SCREEN(windowPtr,'DrawRect');				% use 'FillRect'% SCREEN(windowPtr,'DrawOval');				% use 'FillOval'% SCREEN(windowPtr,'DrawPoly',255,[0 0 50 50]);	% use 'FillPoly'% SCREEN(windowPtr,'GetImage255',[0 0 64 64]);	% use 'GetImage', but small enough for Student MATLAB% SCREEN('SelectMATLAB');						% use 'MATLABToFront'% SCREEN(windowPtr,'SetClutQ',[255:-1:0;255:-1:0;255:-1:0]');		% use 'SetClut'% SCREEN(windowPtr,'SetGamma',[0:255]');		% use 'Gamma'% SCREEN(windowPtr,'TextFace');				% use 'TextStyle'% SCREEN('CloseAll');% % [more,severity,already]=SCREEN('UsageWarnings');% fprintf('\nSuccess! We just tested all the obsolete usages for SCREEN that are still allowed, \nproducing %d warning messages.\n',already);