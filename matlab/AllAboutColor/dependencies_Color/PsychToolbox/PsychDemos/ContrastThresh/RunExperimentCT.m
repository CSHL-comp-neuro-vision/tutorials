% RunExperimentCT%% Measure detection threshold for grating in noise% Each call to RunExperimentCT will measure one threshold.% This is meant to be called as a subprogram after parameters% have been set, not to be executed directly.%% BUGS: Student MATLAB sometimes hangs up in the call to CmdWinToUpperLeft(),% and continues if you hit Command-Period.% 6/26/96  dgp  Wrote it.% 3/8/97   dhb  Massive simplifications.%               Much more documentation.% 1/12/98  dgp	Noted problem in Student MATLAB.% 7/9/98   dgp  Cope when GetClut is not available.% Open up the experimental screenbackgroundEntry = 128;[window,screenRect]=SCREEN(screenNumber,'OpenWindow',backgroundEntry);matlabClut = SCREEN(window,'GetClut');if isempty(matlabClut)	matlabClut=ClutDefault(window);end% Bring up command window and move it to upper left.% That way we can print lots of stuff in the command window% so the user will know what is going on.[cmdDx,cmdDy,bufferWindow] = CmdWinToUpperLeft(window,matlabClut);% Provide introductory remarks.fprintf(1,'\n**************************************\n\n');fprintf('This program demonstrates how to measure a threshold.\n');fprintf('In this case we are measuring the contrast required to detect a grating in noise.\n');fprintf('After some initialization, we conduct a series of\n');fprintf('two interval forced choice trials.  On each trial, your task is\n');fprintf('to detect the grating.  The task is made difficult by the presence\n');fprintf('of visual noise (%g RMS contrast).  If the grating was in the first\n',noiseRmsContrast);fprintf('interval, click the mouse once.  If it was in the second interval,\n');fprintf('click the mouse twice. (Click three times to quit.) The Quest \n');fprintf('threshold seeking algorithm controls the contrast displayed on each \n');fprintf('trial, to home in on your threshold.\n\n');fprintf('We''ll now run %g trials.\n\n',nTrials);fprintf('Click the mouse now to proceed\n');GetClicks;fprintf('\n');% Seed random number generatorClockRandSeed;% Read screen calibration and compute cluts.InitializeClutsCT;% Auditory waveformsbeep=sin(2*pi*0.012*[0:900]);% Make the signal waveformsdisp('	Making signals.');MakeSignalsCT;% Initialize Quest.  The threshold guess is set% relative to the signal to noise ratio.% We aim a bit high because observers do better if they% clearly see the signal on the first few trials.disp('	Initialize Quest parameters.');nIntervals=2; nResponses = 2;beta=3.5; delta=0.01; gamma=1/nIntervals;pCorrect=0.82;if (Enoise > 0)	thresholdGuess = 0.5*log10(80/(Esignal/Enoise))-0.5;else	thresholdGuess = -1.5;endthresholdGuess = max(thresholdGuess,-1.5);priorSd = 4;q=QuestCreate(thresholdGuess,priorSd,pCorrect,beta,delta,gamma);% Bring up screen window to show images.SCREENWinToFront(window,bufferWindow,cmdDx,cmdDy,offClut);HideCursor;% Set the linear clut for the experimentSCREEN(window,'SetClut',linearClut);putRect = CenterRect(signalRect,screenRect);% Set up text style for user interface.SCREEN(window,'TextFont','Helvetica');SCREEN(window,'TextSize',20);SCREEN(window,'TextStyle',0);SCREEN(window,'TextMode','srcOr');% Run the trialstheData = zeros(nTrials,4);wrongRight = ['Wrong' ; 'Right'];for trial=1:nTrials		% Make noise images	MakeNoisesCT;		% Get level to test	trialCon=10^QuestQuantile(q); 	trialCon=min(maxQuestCon,trialCon);	% On first trial, wait for user.	if (trial==1)		fixationRect=CenterRect(SetRect(0,0,4,4),screenRect);		SCREEN(window,'FillRect',255,fixationRect);		instString = 'Click mouse when ready';		SCREEN(window,'DrawText',instString,50,100,255);		GetClicks;		SCREEN(window,'DrawText',instString,50,100,backgroundEntry);		instString = 'Click once for interval 1, twice for interval 2, three times to quit.';		SCREEN(window,'DrawText',instString,50,100,255);	end		whichInterval=randi(nIntervals);	signal0=zeros(size(signal1));	for (interval=1:nIntervals)		% Create stimulus by adding signal and noise		noiseName=sprintf('noise%d',interval);		if (interval == whichInterval)			eval(['stimulus = trialCon*signal1+' noiseName ';']);		else			eval(['stimulus = trialCon*signal0+' noiseName ';']);		end		stimulus=backgroundEntry+entriesPerContrast*stimulus;		% Display stimulus		SndPlay;		WaitSecs(0.3);		SndPlay(beep);		SCREEN(window,'PutImage',stimulus,putRect)		SCREEN(window,'SetClut',linearClut);		WaitSecs(durationMs/1000);		SCREEN(window,'FillRect',backgroundEntry,putRect);	end	% Process response	choice=GetClicks;	if (choice > 2)		break;	end	response=(choice==whichInterval);	GiveFeedback(response);	respString = sprintf('Trial %g: %s',trial,wrongRight(response+1,:));	xLoc = screenRect(rectRight)/2-SCREEN(window,'TextWidth',respString)/2;	yLoc = screenRect(rectBottom)/2;	SCREEN(window,'DrawText',respString,xLoc,yLoc,255);	WaitSecs(0.5);	SCREEN(window,'DrawText',respString,xLoc,yLoc,backgroundEntry);	WaitSecs(0.2);	SCREEN(window,'FillRect',255,fixationRect);		% Update Quest and store data	q = QuestUpdate(q,log10(trialCon),response);	theData(trial,1) = log10(trialCon);	theData(trial,2) = response;	theData(trial,3) = QuestMean(q);	theData(trial,4) = QuestSd(q);end% Close upShowCursor;SCREEN(window,'Close');% Tell user about thresholdfprintf('\n**************************************\n\n');fprintf('Threshold estimate is %g ± %g (mean ± sd, in log units).\n',QuestMean(q),QuestSd(q));if 0 % boring	fprintf('Array theData contains the data.  It has four\n');	fprintf('columns.  The first column provides for each trial\n');	fprintf('the log contrast value tested.  The second column tells\n');	fprintf('whether the trial was right (1) or wrong (0)\n');	fprintf('The third column gives Quest''s running threshold estimate.\n');	fprintf('The fourth column gives Quest''s running estimate standard\n');	fprintf('deviation.\n\n');endfprintf('The plot shows how the threshold estimate converged\n');fprintf('over %g trials.\n\n',trial);% Plot the threshold estimates.plot(theData(1:trial,3),'g');xlabel('Trial number');ylabel('Log contrast threshold');title('Threshold estimate vs. Trial Number');drawnow;