function [posteriorMean,posteriorK] = ...  NormalPosterior(imageData,renderingMatrix,priorMean,priorK,noiseMean,noiseK)% [posteriorMean,posteriorK] = ...%   NormalPosterior(imageData,renderingMatrix,priorMean,priorK,noiseMean,noiseK)%% Compute the posterior mean and variance of a linear problem with normal% prior and noise.%% This formula derived explicity in:%   Brainard, D. H. (1995) "An ideal observer for appearance: reconstruction%   from samples," UCSB Vision Labs Tech Report 95-1, Department of Psychology,%   UC Santa Barbara, Santa Barbara, CA, 93016.%% A univariate version of the derivation may be found in:%   Lee, P. M., Bayesian Statistics, (Oxford University Press: London, 1989).%% The formula is identical to the discrete Wiener filter develped in:%   Pratt, W. K., Digital Image Processing, (John Wiley & Sons: New York, 1978).%% Note that Pratt's published formula (Eq. 14.6-9) contains a typographical error% for the sign of the contribution of the noise mean to the posterior mean.%% Pratt provides an equivalent formula that he asserts is more numerically stable% for overdetermined problems.%% 7/3/98  dhb  Added comment, changed notation for tutorial.%         dhb  Updated formula to be consistent with what is done in the tutorial.% 9/16/98 dhb  Fixed formula for normal posterior.  What was here made no sense.W = priorK*renderingMatrix'*inv(renderingMatrix*priorK*renderingMatrix'+noiseK);b =	priorMean - W*renderingMatrix*priorMean - W*noiseMean;posteriorMean = W*imageData+b;posteriorK = inv(inv(priorK) + renderingMatrix'*inv(noiseK)*renderingMatrix);