global memdataglobal mvmntglobal movement movement2global stimulate delayglobal model fileprefix% they stimulated for 10-16 ms in the OPN region, beginning% about 4+-1 ms after the beginning of the saccade. Animals% made saccades of 20-degrees eccentricity.% Simulated saccades have a latency, with respect to the trigger, of 3 ms for% saccades <=10.3 degrees, or 2ms for saccades 10.3 < amplitude < 40.4% So, here I stimulate the OPNs beginning 7ms=3+4 after the trigger. % AMMENDMENT: Since the critical factor is the value on the integrator at the% time of stimulation, I have adjusted stimulation onset time so that the % saccade is interrupted near the midpoint, as in Keller, Gandhi and Shieh.model='model_OPNgated'fileprefix='O';holdfig=figure;movement=0; movement2=0;interruption=0; finalpos=0;delay=[0 0.036; 10 0.036];	% for the delayed-leak model, start the leak				% 39 ms after the trigger, formerly 63msfor ii=1:11  % erase anly old plots  %tfig=findobj('Name','model_clipped/Velocity');  %if (tfig>0)  % figure(tfig);  % cla;  % refresh(tfig);  % end;  %tfig=findobj('Name','model_clipped/Position vs. Time')  %if (tfig>0)  % figure(tfig);  % cla;  % refresh(findobj('Name','model_clipped/Position vs. Time'));   % end;  % run the simulation  dur=ii*.010 - 0.01 % duration of OPN stimulation  disp(sprintf('duration #%.0f',ii));  stimulate=[0, 0; 0.064, 0; 0.065, 5000; 0.065+dur, 5000; 0.066+dur, -60; 0.068+dur, -60; 0.069+dur,0; 1000,0];% NOTE: for the clipped model, it is necessary to put in a new trigger% and to make sure the initial trigger is only very brief.% I have done this here for all models because it seems like the best way% to simulate the results.%-200;0.+dur,-200;0.119+dur,0; 10, 0];  %mdata=[0.05,17.6,0]; %continuousmdata=[0.05,21.4,0]; %delayed and gated  fastmakeinput;  [t,x,y]=euler(model,0.3,[],[1e-5,1e-3,1e-3,[],[],1]);  movement(ii,1:10)=mvmnt(1,1:10);  movement2(ii,1:10)=zeros(1,10);  interruption(ii)=0.066+dur-mvmnt(1,10); % stimoffset- primary pvel  finalpos(ii)=mvmnt(1,8); % horizontal endpoint, first movement  if (size(mvmnt,1)>1)    finalpos(ii)=mvmnt(2,8); % horizontal endpoint, second movement    movement2(ii,i:10)=mvmnt(2,i:10);    end;  trace=[t';y'];  % save the movement trace  %obj=findobj('Name','model_clipped/Velocity');  %chil=get(obj,'Children');  %copyobj(chil,holdfig);  filename=sprintf('kg%s%.3f.out',fileprefix,dur);  fid = fopen(filename,'w');  fprintf(fid,'%.3f %.2f\n',trace);  fclose(fid);  plot(trace(1,:), trace(2,:), 'b.');  axis('square');  drawnow;  hold on; end;% save analysisfilename=sprintf('kg%s.anl1',fileprefix);fid = fopen(filename,'w');for ii=1:size(movement,1)  fprintf(fid,'%.2f, %.3f, %.2f, %.3f, %.3f, %.2f, %.2f, %.2f, %.2f, %.3f\n',movement(ii,:));  end;fclose(fid);filename=sprintf('kg%s.anl2',fileprefix);fid = fopen(filename,'w');for ii=1:size(movement2,1)  fprintf(fid,'%.2f, %.3f, %.2f, %.3f, %.3f, %.2f, %.2f, %.2f, %.2f,%.3f\n',movement2(ii,:));  end;fclose(fid);eval(['print -depsc kg' fileprefix 'fig1.ps']);eval(['print -dmfile kg' fileprefix 'fig1.m']);hold off% make the alternative figurefigure;plot(interruption, finalpos, 'ro');axis([0,0.1,-5,50])drawnow;eval(['print -depsc kg' fileprefix 'fig2.ps']);eval(['print -dmfile kg' fileprefix 'fig2.m']);